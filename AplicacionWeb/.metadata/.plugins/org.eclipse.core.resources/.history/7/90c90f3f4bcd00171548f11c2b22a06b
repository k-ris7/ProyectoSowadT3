package com.capaweb.mvc;

import java.util.ArrayList;
import java.util.Locale;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.servlet.ModelAndView;

import com.negocio.agenda.ContactoNegocio;
import com.negocio.agenda.UsuarioNegocio;
import com.capaentidades.agenda.Contacto;
import com.capaentidades.agenda.Usuario;

@Controller
public class ContactoController {
	
	/*@RequestMapping(value = "/ListaContacto", method = RequestMethod.GET)
	public ModelAndView ListaContacto(@RequestParam String idUssuario,Model model) {
		try {
			int id = Integer.parseInt(idUssuario);
			return new ModelAndView("ListaContacto","listacontacto", ContactoNegocio.Instancia().ListarContactoPorUsuario(id));
		} catch (Exception e) {
			model.addAttribute("error", e.getMessage());
			return new ModelAndView("redirect:Error");
		}
	}*/
	
	@RequestMapping(value = "/ListaContacto", method = RequestMethod.GET)
	public ModelAndView ListaContacto(HttpServletRequest req) {		
		try {
			
			int id = Integer.parseInt(req.getParameter("idUssuario"));
			ArrayList<Contacto> result = ContactoNegocio.Instancia().ListarContactoPorUsuario(id);
			
			ModelAndView m = new ModelAndView("ListaContacto");
			m.addObject("idUsuario", id);
			m.addObject("listacontacto", result);
			return m;
			
		} catch (Exception e) {
			return new ModelAndView("frmError", "error", e.getMessage());
		}	
	}
	
	@RequestMapping(value = "/EliminarContacto", method = RequestMethod.GET)
	public ModelAndView EliminarContacto(@RequestParam String idContacto,@RequestParam String idUusario) {		
		try {
			
			int idCont = Integer.parseInt(idContacto);
			int idUsua = Integer.parseInt(idUusario);
			
			boolean elimino = ContactoNegocio.Instancia().EliminarContacto(idCont);
			ArrayList<Contacto> result = ContactoNegocio.Instancia().ListarContactoPorUsuario(idUsua);
			ModelAndView m = new ModelAndView("ListaContacto");
			if(elimino)
				m.addObject("Mensaje", "Registro Eliminado");
			else
				m.addObject("Mensaje", "Error Eliminado");
			
			m.addObject("idUsuario", idUsua);
			m.addObject("listacontacto", result );
			return m;
			
		} catch (Exception e) {
			return new ModelAndView("frmError", "error", e.getMessage());
		}	
	}
	
	
	@RequestMapping(value = "/viewRegistroContacto", method = RequestMethod.GET)
	public ModelAndView viewRegistroContacto(@RequestParam String idUsuario) {
		
		ModelAndView m = new ModelAndView("frmRegistroContacto","command", new Contacto());
		m.addObject("idUsuario", Integer.parseInt(idUsuario));
		
		return m;
	}
	
	@RequestMapping(value = "/RegistroContacto", method = RequestMethod.POST)
	public String RegistroContacto(@RequestParam String idUsuario,@ModelAttribute("SpringWeb")Contacto u, 
								ModelMap model){
		try {
			
			u.setUsuarioID(Integer.parseInt(idUsuario));
			boolean result = ContactoNegocio.Instancia().InsertarContacto(u);
			if(result)
				model.addAttribute("Mensaje", "Contacto Registrado");
			else
				model.addAttribute("Mensaje", "Error al Registrar Contacto");
			
			model.addAttribute("idUsuario", Integer.parseInt(idUsuario));
			model.addAttribute("command", new Contacto());
			return "frmRegistroContacto";
		} catch (ArithmeticException e) {
			model.addAttribute("error", e.getMessage());
			model.addAttribute("command", new Usuario());
			return "home";
		} catch (Exception e) {
			model.addAttribute("error", e.getMessage());
			return "Error";
		}
	}

}
